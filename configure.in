# Copyright (C) 2002 Jesse Chappell <jesse@essej.net>
#  
# This file is free software; as a special exception the author gives
# unlimited permission to copy and/or distribute it, with or without 
# modifications, as long as this notice is preserved.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY, to the extent permitted by law; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

AC_INIT(reconf)
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(freqtweak,0.4.5)
#LF_CONFIGURE_CC
#AC_PROG_CXX
LF_CONFIGURE_CXX
LF_HOST_TYPE
LF_SET_WARNINGS
AC_PROG_RANLIB

AC_C_CONST
AC_C_INLINE
AC_PROG_AWK
AC_PROG_LN_S
AC_TYPE_SIGNAL
AC_TYPE_SIZE_T

FREQTWEAK_VERSION=0.4.5

AC_SUBST(FREQTWEAK_VERSION)



AC_CHECK_LIB(m,pow)

AC_CHECK_FUNCS([memmove])
AC_CHECK_FUNCS([memset])
AC_CHECK_FUNCS([mkdir])
AC_CHECK_FUNCS([pow])
AC_CHECK_FUNCS([sqrt])

AC_CHECK_HEADERS([fcntl.h])
AC_CHECK_HEADERS([values.h])

# FFTW section
use_fftw=yes

AC_ARG_WITH(fftw,[  --with-fftw=PFX        Prefix where fftw is installed (optional)],
 fftw_prefix="$withval", fftw_prefix="/usr/local") 




if test "$use_fftw" = "yes"
then

LDFLAGS="$LDFLAGS -L$fftw_prefix/lib -lm"
JACK_CFLAGS="-I$fftw_prefix/include"

CFLAGS="$CFLAGS $FFTW_CFLAGS"
CPPFLAGS="$CPPFLAGS $FFTW_CFLAGS"

# check for single precision convention first
AC_CHECK_LIB(sfftw, fftw_create_plan)
AC_CHECK_LIB(srfftw, rfftw_create_plan)
AC_CHECK_LIB(srfftw, rfftw_create_plan,
[
have_fftw=yes
],
[
have_fftw=no
])

if [[ "$have_fftw" = "no" ]] ; then
    #    AC_MSG_ERROR("Could not find FFTW! Is it installed (www.fftw.org) ? ")

  AC_CHECK_LIB(fftw, fftw_create_plan)
  AC_CHECK_LIB(rfftw, rfftw_create_plan)

  AC_CHECK_LIB(rfftw, rfftw_create_plan,
  [ 
  have_fftw=yes
  ],
  [
  have_fftw=no
  ])

  if [[ "$have_fftw" = "no" ]] ; then
        AC_MSG_ERROR('Could not find FFTW! Is it installed?  www.fftw.org  ')
  fi

  cat > mytest.$ac_ext <<EOF
#include <fftw.h>
EOF


else

cat > mytest.$ac_ext <<EOF
#include <sfftw.h>
EOF

fi

AC_CHECK_HEADERS(sfftw.h srfftw.h fftw.h rfftw.h)

AC_MSG_CHECKING([if FFTW is actually float precision])
cat >> mytest.$ac_ext <<EOF

int main(int argc,char **argv)
{
   return (sizeof(float) != sizeof(fftw_real));
}

EOF

$CXX -o mytest $CFLAGS $CPPFLAGS mytest.$ac_ext >&5
if ./mytest ; then
AC_MSG_RESULT(yes)
else
AC_MSG_RESULT(no)
AC_MSG_ERROR([
==========================================================================
ERROR: FreqTweak needs an FFTW library compiled with float precision
  Try rebuilding and installing FFTW with the following configure options:
      --enable-float --enable-type-prefix 
==========================================================================
])
fi

rm -f ./mytest ./mytest.$ac_ext

fi
# end fftw section




# jack stuff
use_jack=yes

AC_ARG_WITH(jack,[  --with-jack=PFX        Prefix where jack is installed (optional)],
 jack_prefix="$withval", jack_prefix="/usr/local") 

if test "$use_jack" = "yes"
then

LIBS="$LIBS -ldl"
LDFLAGS="$LDFLAGS -L$jack_prefix/lib"
JACK_CFLAGS="-I$jack_prefix/include"

CFLAGS="$CFLAGS $JACK_CFLAGS"
CPPFLAGS="$CPPFLAGS $JACK_CFLAGS"

AC_CHECK_HEADERS(jack/jack.h)

JACK_LIB=""

AC_CHECK_LIB(jack,jack_activate,
[
have_jack=yes
JACK_LIB="-L$jack_prefix/lib -ljack"
],
[
have_jack=no
])
fi

if [[ "$have_jack" = "no" ]] ; then
        AC_MSG_ERROR('Could not find jack! Is it installed (jackit.sf.net) ? Try using --with-jack=PREFIX')
fi
  

LIBS="$LIBS $JACK_LIB"



#AC_MSG_CHECKING(for wxWindows)


AC_PATH_PROG(WX_CONFIG, wx-config, no, $PATH:/usr/local/bin )
if [[ "$WX_CONFIG" = "no" ]] ; then
        AC_MSG_ERROR("Could not find wx-config: is wxWindows installed? is wx-config in your path?")
fi
LIBS="$LIBS `$WX_CONFIG --libs`"

#CPPFLAGS="$CPPFLAGS `$WX_CONFIG --cxxflags`"

if $WX_CONFIG --cxxflags > /dev/null 2>&1 ; then
    CPPFLAGS="$CPPFLAGS `$WX_CONFIG --cxxflags` -DNEWWX"
else
    CPPFLAGS="$CPPFLAGS `$WX_CONFIG --cflags`"
fi
#wx_config_major_version=`$WX_CONFIG  --version | \
#           sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\1/'`
#wx_config_minor_version=`$WX_CONFIG --version | \
#           sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\2/'`
#wx_config_micro_version=`$WX_CONFIG  --version | \
#           sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\3/'`


UNAME_MACHINE=`uname -m`
CXXFLAGS="$JACK_CFLAGS  -g -Wall -O3 -fomit-frame-pointer -fstrength-reduce -funroll-loops -fmove-all-movables -ffast-math -mcpu=${UNAME_MACHINE} -march=${UNAME_MACHINE}"


AC_OUTPUT(Makefile  src/Makefile src/version.h)
